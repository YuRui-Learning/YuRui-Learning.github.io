[ { "title": "考研经验", "url": "/posts/Graduate-School/", "categories": "随笔", "tags": "生活", "date": "2022-04-06 13:55:00 +0000", "snippet": "考研具体情况首先我是21年开始复习，大致一年的复习时间，考取院校华东理工大学，数学125，自动控制原理125，英语66，政治71，总分387，最终复试排名11。择校首先得清楚自己的定位，到底自己的能力上限和下限是怎么样，给自己留出预留空间，可以在研招网，学科评估网站和学院官网上，知乎收集信息，结合个人理想的工作城市，学科评估，学校层次去分析。像我就是上海 + B++211。我在选择时候就选择了这些学校，他们的自控都很强，浙大工程师学院，中科大先进研究院，华东理工大学，北京科技大学，东华大学，北京化工大学，北京工业大学，华北电力大学，杭州电子科技大学，浙江工业大学，上海理工大学这些都是我之前看过觉得非常不错的学校这里推荐给各位想考控制工程的学弟学妹。#政治 我政治选择题应该是39-41，大题应该是30-32，总体来说在魔都政治70，我也已经满意了，如果想在政治方 面取得80分的，要真的好好看视频，看书，我的学习路线只针对政治不求太高的同学。9月份，如果数学和专业 课学习的差不多的时候，可以开始复习政治了，吃好饭或者做题累了，可以看视频（徐涛）强化班配合着他的书 籍过一遍。尽可能再十月前刷完政治视频，我是思政直接跳过，其他的三章大致看了一遍了，然后如果没看完， 也没事，边刷肖1000题边看。当然我个人认为这套题只是题库，因为没有结合时政，并不是关键，所所以我是 十天快速过完，然后手机上各种小程序反复刷题。11月份肖八应该是月初就上市了，肖八的选择要好好刷，我刷 了三遍，然后就着（学长小谭）整理的知识点提纲背了无数遍，每天刷一章，复习两三章知识点，然后对于涉及 的知识点一定要记牢，至于肖八大题或者一些徐涛，腿姐带背有时间可以跟着背。12月首先的任务就是根据不同 老师整理的背诵笔记去背诵知识点，肖四一出，选择题老样子做，大题每天都要好好背（分章节和分套卷都可以 ），至于别的老师的卷子有时间也可以做，然后考前就是去复习不同的知识点提纲和肖四的背诵内容就可以了， 至于答题时候很多时候都可抄材料，记得用就行。#英语我英语阅读错了四个，新题型错了三个，完型估计对半开把，主观题部分估计15分左右，客观题部分特别是新题型要注意，我今年就对了两个，之前模拟的十年的题基本都是全对，今年新题型确定蛮难的，不好拿分。总体来说，我开始预计的分数要比实际低很多，因为客观题答的确实不好，但是主观题的分数超出了我的预计，所以好好准备作文和翻译很有用。我认为英语最关键的还是背单词，考研后期，我没有注重背单词，所以导致我在考场上一些非常简单的词汇都忘记了。书本的话推荐红宝书或者朱伟的单词书（配套视频）或者墨墨背单词也不错，如果学有余力，可以做点题源外刊，比如说张剑的阅读理解，朱伟的题源报刊，新东方的题源报刊都可以。六月到九月的时间里，需要做阅读的真题，有句话得阅读得天下。初期可以看唐迟的阅读课做几张早年卷子，书本的话我推荐用黄皮书，如果效果不好也可以看看技巧课（唐迟）。我是用铅笔做每天一到两篇，然后二刷，因为我开始准备的是英语一，之后学校换成英二了，所以英语真题我全部刷了，而且我是七月才开始的，所以肯定来得及。对于阅读考试前都可以复习，不做，读一遍也可以。最后留2-3张模拟，模拟的也要复盘。我自己就是21年的真题在考前一天做的，但是各种突发情况，我对21年真题都没好好理解， 解析都没看，简单看了唐迟的视频理解了下，效果很差，所以还是要早点模拟。十月份在进行上述的阅读和单词同时，还要进行小三门（完型，新题型，翻译）的学习。这三门有一定的技巧性，但难度比阅读低一点，这里推荐完型和新题型（宋逸轩，刘琦），看完他们的课程，做一定练习就可以了，规律也都总结好，翻译的话看唐静即可，英二同学如果有时间可以做做英一的翻译，会有提高。十一月和十二月，最主要的工作是保持手感和练习作文。我是十一月份自己去写大作文，然后找老师批改，总结一套大作文的模板，而十二月份直接去根据题型背小作文（王江涛），每个类型背一篇足以。因为练习加背诵，我在考试最开始40分钟就写好大小作文，就留出更多的空余时间，而且从成绩分析来说也还不错。#数学对于两门偏文科的科目，其实绝大部分好好准备考研的同学，都取得了还可以的成绩，但决定最终成绩的往往是后面两门，专业课和数学。先讲讲数学，我提供一些个人觉得不错的书，参考书：武忠祥辅导讲义（高数），李永乐辅导讲义（线代），余丙森概率论（概率），李正元复习全书；习题集: 1800基础部分，660，880，武忠祥严选题，330，108;模拟卷：张宇过关版8+4，李林6+4，合工大共创和超越，李艳芳3套卷，李永乐模拟卷，余丙森模拟卷。首先我认为学数学不要图多，要真的理解，我学东西可能不快，我需要多学几遍去消化，分析，所以我上面提及的任何一个资料或者习题我都刷过两遍以上，像武的讲义粗略估计五遍以上，我感觉我每次学习都能收获很多东西，得到提高。在刷题时候，我不会写在题目空白处，我会写在白纸上如果我有自己的方法或者深刻理解我会在答案中补充，对于错题标记出来，下次学习时候可以定位错题和看当时的理解。对于错题本和笔记本我都有做过，但我不推荐，数学是做题，不是记文字公式，对于错题直接标注，二刷即可，但是我推荐各位在做真题前整理一份自己的思维导图，并且遇到不同题目去扩充自己的思维导图这个能够帮助各位得到更深刻的理解，并且每次做真题前也可以复习一遍自己的思维导图（这里推荐下Xmid），加深概念理解。当然学习方法是要去适合个人的不能说对错，只能靠自己在时间的积累下去分析。大致的学习路线如下图所示。#自动控制原理专业课也是很重要的一门课，我学的是自控，虽然不同学校的范围和内容都不大相同，但学习路线是类似的。7月到8月是学习专业课的基础部分，首先需要根据自己学校的范围把胡寿松红书章节内的内容都学习了，我是第二章到第九章，然后完成对应的课后题，这一块如果经济条件允许的情况下，可以找对应学长指点下，划定一下范围，大致把红书中的例题和课后题都做个一遍。十月前，基础部分理解后，需要用卢京潮老师的PPT和课程去强化一下，他的课只有八章，第九章可以根据学校里教的线控去准备，然后基本要把所有的复习一遍，再把红书的例题和课后题刷一遍，至于卢老师的PPT建议反复刷，非常好，思想和难度都不错，个人觉得起码学三遍以上。11月份，对于每个学校的真题，是我们能复习的最可靠的资料，无论年份有多少，反复做，年份早的可以做个两遍，刷遍错题， 年份最近的起码四遍以上，每次都按全真模拟去做，计时，算分做记录，并且把反复做错的题目标记出来。十一月到十二月，是巩固和提高的时候，这个时候可以去做题海（胡寿松黄书），也可以做有些机构的模拟题，我做的是起点的模拟题，虽然有很多错题，但是市面上算不错的书了，然后就是反复理解真题里面的难题，错题，去回顾一些红书上的经典例题和课后题以及卢PPT。#总结①身体真的很重要，之前有学长学姐说考研身体还是很重要的，我当时的想法可能和现在的各位一样，我为了考上，拼一拼，身体之后再养，有这个决心很好，但是当你们真的遇到，就会非常绝望且无助，我自己开始作息不规律，得胃病了，吃什么都不舒服，打嗝，作呕，无比煎熬，加上自己熬夜抵抗力差了，荨麻疹严重，一激动，整个人想学都学不进去。为了调整然后我大四一直在家，较为舒适和安逸的环境，让我有所缓解，但是考研我前回大连，非常不幸因为自己没适应好，从我回来到考研结束，重感冒一直没有好，每天晚上咳嗽到三四点睡不着，早上起来又会头晕流鼻血，加上之前胃病又不能吃太多药，整个人非常焦虑，也有一些像我一样情况，因为学习太用功，身体没抗住，所以我想传达给各位，无论如何，身体还是最重要的，我是运气好超常发挥，但是绝大部分后期身体出现问题的的都没有取得非常理想的成绩，所以还是要注意身体的。②切记自我感动，这个很关键，自我感动很常见，有时候为了完成一个定时的目标，比如背单词一个小时，背100个单词，做100道数学题，我相信这个初衷肯定是好的，通过自制力督促自己完成任务，但是如果你本身就没有那个精力了，完全没有必要去浪费时间。拿我举个简单的例子，早上我定6点必须起来，背单词，但是因为没休息好，太累了，我边背边睡，背着都眯着眼了。其实我现在回想起觉得有点可笑，明明学不进去了，还装着我要学，真的收益很小，困了就睡，累了就休息下，只有真正调整好状态了去学习，你才会有收益，为什么有的人每天学个15个小时也没取得理想成绩，有些人每天学6个小时就行，我想起关键作用的就是他们真正专注的时间有多久，这才是真正的有效时间。虽然像我们可能基础并不好，需要花更多时间去追上那些花6个小时就能完成任务的人，但是在学习中不是讲你学了多久，做了多少题，而是你真正理解了多少，这个就像我在数学中所讲的，真正影响你的是你对这个概念的理解，而不是我刷了市面上所有的题就可以了。③反思总结，我认为学习不在于求量，而是理解，题海战术固然重要，但是单纯为了做题而做题就没有意思了，刷很多题，我觉得只是把会的巩固了，而不是把不会的全部完善了。所以我更喜欢对于好题的精刷，反复刷，因为只有在二次或者三次的复习中，我才会对一个知识点进行深入的思考与理解，当然天赋特别好的，如果一次就掌握了，可以忽略我所说的话。我认为对于绝大部分人，学习需要反复的总结，不断地完善自己的思维导图，才能够更好的巩固自己的知识。④交流也是很关键，沟通交流时候你的思想才会真正动起来，因为像我自己，难题可能看答案迷迷糊糊的觉得自己理解了，当再复述给别人时候，才发现很多细节和重点开始并没有发现。其实就是将第三点反思总结和第四点沟通交流结合就能够很好的巩固你的知识漏洞。⑤适当放松，调节心情，才能更好的高效进入学习状态。```" }, { "title": "非接触物体形状大小识别", "url": "/posts/FirstTest/", "categories": "随笔", "tags": "生活", "date": "2022-04-06 13:55:00 +0000", "snippet": "测距和大小估算～首先在测距方面因为超声波测距仪只能得到2m之内的数据，所以我们选用了VL53L1x光学测距模块用来获得物体与测量仪之间的距离，而得到距离之后我们还要知道物体具体的大小，这时候，估算物体大小的算法有很多，我们用的是单目测距算法的引申，单目测距是由一个距离下色块像素的大小与距离乘积为一个常数k，用这个k通过除以图像像素数来估算物体与测量仪之间距离，而我们需要用的不是这个距离，我们已经有光学测距得到的距离且更加精确了。我们就拿一个模板的像素和距离积作为一个模值，当然该模值需要用该模块经过不同距离下得到积计算其均值，视觉处理测距测量物体体积,通过VL53L1X测距，乘以在图像中所呈现的像素点大小，得到一个基本保持恒定的常量 预估15000(可有disLm得到），通过测量这个乘积的变化，模板设定的大小100mm距离像素实际积的值/预估设定的值（15000）即可得到100*一个百分比，即表示现测量物体与100的大小比例关系，即可通过该方法得到其实际大小，用这个的方法即可得到其高度和半径，当然面积等即可得到。//代码片段 h=int(100*b[3]*distance1/15250) w=int(100*b[2]*distance1/15250) r=int((h+w)/4) #半径取一半颜色识别～在颜色识别方面，OpenMv用的是LAB颜色阈值，不同于人眼正常的RGB和OpenCV中的HSV，L表示亮度，而A表示红绿阈值，B表示蓝色阈值和红绿中的黄色阈值，通过调整其得到想要的颜色。thresholds=[ (0, 100, 24, 75, 14, 127),#red (0, 80, -128, -15, 0, 127) ,#green (0, 100, -128, 49, -128, -10)] #blueWhite_threshold=(66, 0, -128, 127, -128, 127)这是大致的颜色阈值，三种不同颜色，而White_Threshold表示的是红蓝绿三种颜色交杂，用来计算其色块的像素，用上面方法得到其具体长度。而对于形状识别上面，我们选用的是OpenMV内置的霍夫圆检测img.find_circle，四元检测img.find_rects，线段检测等，通过霍夫圆检测即可得到我们想要的圆，矩形检测用来检测矩形，而我们又通过线段检测得到两条线段之间的角度差，如该值是50-70度之间表示是三角形，该方法可以较好的识别正三角形。//代码片段for threshold_index in range(3): #通过索引遍历阈值 blob1 = img.find_blobs([thresholds[threshold_index]], pixels_threshold=600) if blob1: for b in blob1: c=b.pixels()/(b.w()*b.h())#通过这个c即可用来分别是否为三角还是矩形，因为返回的像素是实际面积，而色块面积是包围最大矩形，而三角形是矩形的0.5倍数，即可用来分别矩形和三角形 dis_angle=0 n=0 theta1 = 0 theta2 = 0 for lines in img.find_lines(roi=(b[0],b[1],b[2],b[3]), threshold = 1000, theta_margin = 25, rho_margin = 25): theta1 = lines.theta() #计算线段1的角度 n=n+1 if n==1: theta2 = lines.theta() #计算线段2的角度 dis_angle=abs(theta1-theta2) if dis_angle&amp;gt;100:dis_angle=dis_angle-60 #考虑的是三角形倒过来的情况 if(70&amp;gt;dis_angle&amp;gt;50 and 0.6&amp;gt;c&amp;gt;0.4 ): #表示三角形 img.draw_rectangle(b.rect(), color = (0, 0, 0)) shape=3 color=threshold_index+1 #从索引中得到对应色块颜色 0红色 1 绿色 2 蓝色 加一后输出 if color ==1: img.draw_string(60,10,&#39;red&#39;,color=(255,0,0)) elif color ==2: img.draw_string(60,10,&#39;green&#39;,color=(0,255,0)) elif color ==3: img.draw_string(60,10,&#39;green&#39;,color=(0,0,255)) #通过索引得到其对应颜色,而对于圆形和矩形的颜色形状检测类似，由于有内置函数，所以不细写了，对于他们颜色可以通过判断LAB的上下限得到其对应颜色。球体识别～对于球体识别，可以考虑模块识别，比如ncc算法，FAST算法KCF算法，但是我们用tensorflow lite完成识别，而用google训练的经典模型，跑起来帧率非常低，非常影响运行速率。所以我们选择用edge impulse和teacheable machine 这两个软件去跑出训练模型tflite和labbels用来识别且达到不错的效果。由于需要按键区分，这个value0是GPIO0当其 感受到低电平后进入神经网络识别//代码片段##########################引入tflite和label两个文件##############net = &quot;trained.tflite&quot;labels = [line.rstrip(&#39;\\n&#39;) for line in open(&quot;labels.txt&quot;)]########################判断######################## if value0 ==0: for obj in tf.classify(net, img, min_scale=1.0, scale_mul=0.8, x_overlap=0.5, y_overlap=0.5): predictions_list = list(zip(labels, obj.output())) #通过labels和output两个列表组成字典 maxp=predictions_list[0][1] i=0 j=0 for i in range(3): if predictions_list[i][1]&amp;gt;maxp: j=i maxp=predictions_list[i][1] if predictions_list[j][0] ==&#39;basketball&#39;: print(&quot;basketball&quot;) uart.write(&quot;basketball\\r&quot;) a=1 elif predictions_list[j][0] ==&#39;score ball&#39;: print(&quot;score ball&quot;) uart.write(&quot;score ball\\r&quot;) a=2 elif predictions_list[j][0] ==&#39;volleyball&#39;: print(&quot;volleyball&quot;) uart.write(&quot;volleyball\\r&quot;) a=3随动控制～而在舵机随动控制中，我们选择用OpenMV连接舵机利用PID实现随动控制的效果，基本方式是寻找出色块中央，通过返回的色块中央与图像中心的偏差经过KP运算，再利用误差在时间上累积乘以KI得到控制量的大小，来控制舵机角度的变化。该步骤也是用按键控制，该按键是GPIO6用于识别功能，//代码片段 if value6 ==0: blobs = img.find_blobs([Red_threshold]) if blobs: max_blob = find_max(blobs) pan_error = max_blob.cx()-img.width()/2 tilt_error = max_blob.cy()-img.height()/2 print(&quot;tilt_error: &quot;,tilt_error) img.draw_rectangle(max_blob.rect()) # rect img.draw_cross(max_blob.cx(), max_blob.cy()) # cx, cy pan_output=pan_pid.get_pid(pan_error,1)/2 #应该指定的是PID.PY中的self tilt_output=tilt_pid.get_pid(tilt_error,1) print(&quot;tilt_output: &quot;,tilt_output) print(&quot;pan_output&quot;,pan_output) pan_servo.angle(pan_servo.angle()-pan_output) print(&quot;角度1&quot;,pan_servo.angle()) uart.write(&quot;angle1:%d&quot;%pan_servo.angle()) tilt_servo.angle(tilt_servo.angle()-tilt_output) print(&quot;角度2&quot;,tilt_servo.angle()) uart.write(&quot;angle2:%d \\r\\n&quot;%tilt_servo.angle())" }, { "title": "空白3", "url": "/posts/module2/", "categories": "随笔", "tags": "生活", "date": "2022-04-06 13:55:00 +0000", "snippet": "标题写字//代码片段" }, { "title": "空白4", "url": "/posts/module1/", "categories": "随笔", "tags": "生活", "date": "2022-04-06 13:55:00 +0000", "snippet": "标题写字//代码片段" }, { "title": "空白2", "url": "/posts/FirstTest/", "categories": "随笔", "tags": "生活", "date": "2022-04-06 13:55:00 +0000", "snippet": "标题写字//代码片段" }, { "title": "空白1", "url": "/posts/FirstFile/", "categories": "随笔", "tags": "生活", "date": "2022-04-06 13:55:00 +0000", "snippet": "标题写字//代码片段" }, { "title": "空白5！", "url": "/posts/hello-world/", "categories": "随笔", "tags": "生活", "date": "2022-03-26 02:34:00 +0000", "snippet": "标题写字//代码片段" }, { "title": "你好，世界！", "url": "/posts/hello-world/", "categories": "随笔", "tags": "生活", "date": "2022-03-26 02:34:00 +0000", "snippet": "感谢关注～这里可以放代码片段噢～//代码片段int main(){ hello world;}" } ]
